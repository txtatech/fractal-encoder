XG48c2NyaXB0PlxuICAgICAgICAgLy8gR2V0IHRoZSBjb250YWluZXIgZWxlbWVudFxuICAgICAgICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hdGgtZW5naW5lLWNvbnRhaW5lcjEnKTtcbiAgICAgICAgIFxuICAgICAgICAgLy8gQ3JlYXRlIGEgZm9ybSB0byBzdWJtaXQgbWF0aCBleHByZXNzaW9uc1xuICAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICAgICAgIGZvcm0uaWQgPSAnbWF0aC1mb3JtJztcbiAgICAgICAgIGZvcm0uYWN0aW9uID0gJyMnO1xuICAgICAgICAgXG4gICAgICAgICAvLyBDcmVhdGUgYW4gaW5wdXQgZmllbGQgZm9yIGVudGVyaW5nIG1hdGggZXhwcmVzc2lvbnNcbiAgICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgIGlucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgICAgICBpbnB1dC5pZCA9ICdtYXRoLWlucHV0JztcbiAgICAgICAgIGlucHV0Lm5hbWUgPSAnZXhwcmVzc2lvbic7XG4gICAgICAgICBpbnB1dC5wbGFjZWhvbGRlciA9ICdFbnRlciBhIG1hdGggZXhwcmVzc2lvbic7XG4gICAgICAgICAgICBcbiAgICAgICAgIC8vIEFkZCB0aGUgaW5wdXQgZmllbGQgdG8gdGhlIGZvcm1cbiAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgICAgXG4gICAgICAgICAvLyBDcmVhdGUgYSBidXR0b24gZm9yIHN1Ym1pdHRpbmcgdGhlIGZvcm1cbiAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgYnV0dG9uLnR5cGUgPSAnc3VibWl0JztcbiAgICAgICAgIGJ1dHRvbi5pbm5lckhUTUwgPSAnQ2FsY3VsYXRlJztcbiAgICAgICAgIFxuICAgICAgICAgLy8gQWRkIHRoZSBidXR0b24gdG8gdGhlIGZvcm1cbiAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICAgICAgIFxuICAgICAgICAgLy8gQWRkIHRoZSBmb3JtIHRvIHRoZSBjb250YWluZXJcbiAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtKTtcbiAgICAgICAgIFxuICAgICAgICAgLy8gQWRkIGFuIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSBmb3JtIHRoYXQgbGlzdGVucyBmb3IgdGhlIHN1Ym1pdCBldmVudFxuICAgICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBldmVudCA9PiB7XG4gICAgICAgICAgIC8vIFByZXZlbnQgdGhlIGRlZmF1bHQgZm9ybSBzdWJtaXNzaW9uIGJlaGF2aW9yXG4gICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICBcbiAgICAgICAgICAgLy8gR2V0IHRoZSB2YWx1ZSBvZiB0aGUgaW5wdXQgZmllbGRcbiAgICAgICAgICAgY29uc3QgZXhwcmVzc2lvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXRoLWlucHV0JykudmFsdWU7XG4gICAgICAgICBcbiAgICAgICAgICAgLy8gVXNlIHRoZSBKYXZhU2NyaXB0IGV2YWwoKSBmdW5jdGlvbiB0byBjYWxjdWxhdGUgdGhlIHJlc3VsdCBvZiB0aGUgZXhwcmVzc2lvblxuICAgICAgICAgICBjb25zdCByZXN1bHQgPSBldmFsKGV4cHJlc3Npb24pO1xuICAgICAgICAgXG4gICAgICAgICAgIC8vIENyZWF0ZSBhIHBhcmFncmFwaCBlbGVtZW50IHRvIGRpc3BsYXkgdGhlIHJlc3VsdFxuICAgICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICBwLmlubmVySFRNTCA9IGBSZXN1bHQ6ICR7cmVzdWx0fWA7XG4gICAgICAgICBcbiAgICAgICAgICAgLy8gQWRkIHRoZSBwYXJhZ3JhcGggdG8gdGhlIGNvbnRhaW5lclxuICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocCk7XG4gICAgICAgICBcbiAgICAgICAgICAgLy8gTG9nIHRoZSByZXN1bHQgdG8gdGhlIGNvbnNvbGVcbiAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgIH0pO1xuICAgICAgPC9zY3JpcHQ