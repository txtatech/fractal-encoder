<script>\n         // Check if the service worker is supported\n         if ('serviceWorker' in navigator) {\n           // Dynamically create a script element\n           const serviceWorkerScript = document.createElement('script');\n           // Set the src attribute to the service worker script\n           serviceWorkerScript.src = '/service-worker.js';\n           // Add the script element to the document\n           document.body.appendChild(serviceWorkerScript);\n           // Register the service worker\n           navigator.serviceWorker.register('/service-worker.js')\n             .then(registration => {\n               console.log('Service worker registered:', registration);\n             })\n             .catch(error => {\n               console.error('Error registering service worker:', error);\n             });\n         }\n      </script>\n<script src=\"/service-worker.js\"></script>\n<script>\n         if ('serviceWorker' in navigator) {\n           window.addEventListener('load', () => {\n             navigator.serviceWorker.register('/service-worker.js')\n               .then(registration => {\n                 console.log('Service worker registered:', registration);\n               })\n               .catch(error => {\n                 console.error('Error registering service worker:', error);\n               });\n           });\n         }\n      </script>\n<script src=\"math-engine.js\"></script>\n<script>\n         if ('serviceWorker' in navigator) {\n           // Register the service worker\n           navigator.serviceWorker.register('/service-worker.js')\n             .then(registration => {\n               console.log('Service worker registered:', registration);\n         \n               // Install the service worker\n               registration.installation.then(() => {\n                 console.log('Service worker installed');\n               });\n             })\n             .catch(error => {\n               console.error('Error registering service worker:', error);\n             });\n         }\n      </script>\n<script>\n   if ('serviceWorker' in navigator) {\n     navigator.serviceWorker.register('/service-worker.js')\n       .then(registration => {\n         console.log('Service worker registered:', registration);\n       })\n       .catch(error => {\n         console.error('Error registering service worker:', error);\n       });\n   }\n</script>\n<script>\n         // Get the container element\n         const container = document.getElementById('math-engine-container1');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n            \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         \n           // Log the result to the console\n           console.log(result);\n         });\n      </script>\n<script>\n         // Get the container element\n         const container23 = document.getElementById('math-engine-container23');\n  </script>\n<script>\n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n\n         // Add the input field to the form\n         form.appendChild(input);\n  \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         });\n         console.log(result);\n      </script>\n<script>\n         // Get the container element\n         const container3 = document.getElementById('math-engine-container3');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         });\n      </script>\n<script>   \n         // Create a function to generate random numbers\n         const generateRandomNumber = () => {\n           return Math.floor(Math.random() * 100);\n         }\n         \n         // Create a function to log the random numbers to the console\n         const logRandomNumbers = () => {\n           console.log(generateRandomNumber());\n           console.log(generateRandomNumber());\n           console.log(generateRandomNumber());\n         }\n         \n         // Call the logRandomNumbers function\n         logRandomNumbers();\n      </script>\n<script>\n         // Get the container element\n         const container4 = document.getElementById('math-engine-container4');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         \n           // Log the result to the console\n           console.log(`Calculation result: ${result}`);\n         });\n      </script>\n<script>\n         self.addEventListener('install', event => {\n           console.log('Service worker installing...');\n         \n           // Create a cache to store resources\n           caches.open('math-engine-cache')\n             .then(cache => {\n               console.log('Cache opened');\n         \n               // Add resources to the cache\n               return cache.addAll([\n                 '/index.html',\n                 '/math-engine.js',\n                 '/style.css',\n                 '/image.png'\n               ]);\n             })\n             .then(() => {\n               console.log('Resources added to cache');\n             })\n             .catch(error => {\n               console.error('Error adding resources to cache:', error);\n             });\n         });\n         \n         self.addEventListener('activate', event => {\n           console.log('Service worker activating...');\n         });\n         \n         self.addEventListener('fetch', event => {\n           console.log('Fetching resource:', event.request.url);\n         \n           // Check if the requested resource is stored in the cache\n           caches.match(event.request)\n             .then(response => {\n               // If it is, return the cached resource\n               if (response) {\n                 console.log('Resource found in cache:', event.request.url);\n                 return response;\n               }\n         \n               // If it is not, make a request to the server and return the response\n               console.log('Resource not found in cache, fetching from server:', event.request.url);\n               return fetch(event.request);\n             })\n             .catch(error => {\n               console.error('Error fetching resource:', error);\n             });\n         });\n      </script>\n<script src=\"math-engine.js\"></script>\n<script>\n         if ('serviceWorker' in navigator) {\n           window.addEventListener('load', () => {\n             navigator.serviceWorker.register('/service-worker.js')\n               .then(registration => {\n                 console.log('Service worker registered:', registration);\n               })\n               .catch(error => {\n                 console.error('Error registering service worker:', error);\n               });\n           });\n         }\n      </script>\n<script>\n         self.addEventListener('install', event => {\n           console.log('Service worker installing...');\n         \n           // Create a cache to store resources\n           caches.open('math-engine-cache')\n             .then(cache => {\n               console.log('Cache opened');\n         \n               // Add resources to the cache\n               return cache.addAll([\n                 '/index.html',\n                 '/math-engine.js',\n                 '/style.css',\n                 '/image.png'\n               ]);\n             })\n             .then(() => {\n               console.log('Resources added to cache');\n             })\n             .catch(error => {\n               console.error('Error adding resources to cache:', error);\n             });\n         });\n      </script>\n<script>\n         self.addEventListener('fetch', event => {\n           console.log('Fetching resource:', event.request.url);\n         \n           // Check if the requested resource is stored in the cache\n           caches.match(event.request)\n             .then(response => {\n               // If it is, return the cached resource\n               if (response) {\n                 console.log('Resource found in cache:', event.request.url);\n                 return response;\n               }\n         \n               // If it is not, make a request to the server and return the response\n               console.log('Resource not found in cache, fetching from server:', event.request.url);\n               return fetch(event.request);\n             })\n             .catch(error => {\n               console.error('Error fetching resource:', error);\n             });\n         });\n      </script>\n<script>\n         // Get the container element\n         const container5 = document.getElementById('math-engine-container5');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n      </script>\n<script>\n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         });\n      </script>\n<script>\n         // Get the container element\n         const container7 = document.getElementById('math-engine-container7');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         \n           // Log the result to the console\n           console.log(`Result: ${result}`);\n         });\n      </script>\n<script>\n   // Get the page size in bytes\n   const pageSize = document.body.offsetHeight * document.body.offsetWidth;\n   \n   // Convert the page size to kilobytes\n   const pageSizeKB = pageSize / 1000;\n   \n   // Create a paragraph element to display the page size\n   const p = document.createElement('p');\n   p.innerHTML = `Page size: ${pageSizeKB} KB`;\n   \n   // Add the paragraph to the container\n   container.appendChild(p);\n   \n   // Log the page size to the console\n   console.log(`Page size: ${pageSizeKB} KB`);\n</script>\n<script>\n   // Add an event listener to the form that listens for the submit event\n   form.addEventListener('submit', event => {\n     // Prevent the default form submission behavior\n     event.preventDefault();\n   \n     // Get the value of the input field\n     const expression = document.getElementById('math-input').value;\n   \n     // Use the JavaScript eval() function to calculate the result of the expression\n     const result = eval(expression);\n   \n     // Convert the result to a binary string\n     const resultBinary = result.toString(2);\n   \n     // Create a paragraph element to display the result in binary\n     const p = document.createElement('p');\n     p.innerHTML = `Result in binary: ${resultBinary}`;\n   \n     // Add the paragraph to the container\n     container.appendChild(p);\n   \n     // Log the binary result to the console\n     console.log(`Result in binary: ${resultBinary}`);\n   });\n</script>\n<script>\n      \n      <div id=\"math-engine-container8\"></div>\n      <!-- Create a script to generate the math engine -->\n</script>\n<script>\n         // Get the container element\n         const container8 = document.getElementById('math-engine-container8');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n     </script>\n<script>\n           // Get the container element\n           const container9 = document.getElementById('math-engine-container9');\n         \n           // Create a form to submit math expressions\n           const form = document.createElement('form');\n           form.id = 'math-form';\n           form.action = '#';\n         \n           // Create an input field for entering math expressions\n           const input = document.createElement('input');\n           input.type = 'text';\n           input.id = 'math-input';\n           input.name = 'expression';\n           input.placeholder = 'Enter a math expression';\n         \n           // Add the input field to the form\n           form.appendChild(input);\n         \n           // Create a button for submitting the form\n           const button = document.createElement('button');\n           button.type = 'submit';\n           button.innerHTML = 'Calculate';\n         \n           // Add the button to the form\n           form.appendChild(button);\n         \n           // Add the form to the container\n           container.appendChild(form);\n         \n           // Add an event listener to the form that listens for the submit event\n           form.addEventListener('submit', event => {\n             // Prevent the default form submission behavior\n             event.preventDefault();\n         \n             // Get the value of the input field\n             const expression = document.getElementById('math-input').value;\n         \n             // Use the JavaScript eval() function to calculate the result of the expression\n             const result = eval(expression);\n         \n             // Convert the result to a binary string\n             const resultBinary = result.toString(2);\n         \n             // Create a paragraph element to display the result in binary\n             const p = document.createElement('p');\n             p.innerHTML = `Result in binary: ${resultBinary}`;\n         \n             // Add the paragraph to the container\n             container.appendChild(p);\n           });\n      </script>\n<script>\n   const mathData = {\n     pi: 3.14159265358979323846,\n     e: 2.71828182845904523536,\n     phi: 1.61803398874989484820,\n     sqrt2: 1.41421356237309504880,\n     maxInt32: 2147483647,\n     minInt32: -2147483648,\n     maxUint32: 4294967295,\n     maxInt16: 32767,\n     minInt16: -32768,\n     maxUint16: 65535,\n     maxInt8: 127,\n     minInt8: -128,\n     maxUint8: 255,\n     add: (a, b) => a + b,\n     subtract: (a, b) => a - b,\n     multiply: (a, b) => a * b,\n     divide: (a, b) => a / b,\n     modulo: (a, b) => a % b,\n     increment: (a) => ++a,\n     decrement: (a) => --a,\n     abs: (a) => Math.abs(a),\n     round: (a) => Math.round(a),\n     floor: (a) => Math.floor(a),\n     ceil: (a) => Math.ceil(a),\n     min: (...args) => Math.min(...args),\n     max: (...args) => Math.max(...args),\n     pow: (a, b) => Math.pow(a, b),\n     sqrt: (a) => Math.sqrt(a),\n     cbrt: (a) => Math.cbrt(a),\n     exp: (a) => Math.exp(a),\n     log: (a) => Math.log(a),\n     log10: (a) => Math.log10(a),\n     log2: (a) => Math.log2(a),\n     sin: (a) => Math.sin(a),\n     cos: (a) => Math.cos(a),\n     tan: (a) => Math.tan(a),\n     asin: (a) => Math.asin(a),\n     acos: (a) => Math.acos(a),\n     atan: (a) => Math.atan(a),\n     toRadians: (a) => Math.toRadians(a),\n     toDegrees: (a) => Math.toDegrees(a),\n     random: () => Math.random()\n   };\n</script>\n<script>\n   // Get the container element\n   const container11 = document.getElementById('math-engine-container11');\n   \n   // Create a form to submit math expressions\n   const form = document.createElement('form');\n</script>\n<script>\n     // Get the container element\n     const container12 = document.getElementById('math-engine-container12');\n   \n     // Create a form to submit math expressions\n     const form = document.createElement('form');\n     form.id = 'math-form';\n     form.action = '#';\n   \n     // Create an input field for entering math expressions\n     const input = document.createElement('input');\n     input.type = 'text';\n     input.id = 'math-input';\n     input.name = 'expression';\n     input.placeholder = 'Enter a math expression';\n   \n     // Add the input field to the form\n     form.appendChild(input);\n   \n     // Create a button for submitting the form\n     const button = document.createElement('button');\n     button.type = 'submit';\n     button.innerHTML = 'Calculate';\n   \n     // Add the button to the form\n     form.appendChild(button);\n   \n     // Add the form to the container\n     container.appendChild(form);\n   \n     // Add an event listener to the form that listens for the submit event\n     form.addEventListener('submit', event => {\n       // Prevent the default form submission behavior\n       event.preventDefault();\n   \n       // Get the value of the input field\n       const expression = document.getElementById('math-input').value;\n   \n       // Use the JavaScript eval() function to calculate the result of the expression\n       const result = eval(expression);\n   \n       // Create a paragraph element to display the result\n       const p = document.createElement('p');\n       p.innerHTML = `Result: ${result}`;\n   \n       // Add the paragraph to the container\n       container.appendChild(p);\n   \n       // Log the result to the console\n       console.log(result);\n     });\n</script>\n<script>\n         // Get the container element\n         const container13 = document.getElementById('math-engine-container13');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         });\n      </script>\n<script>\n         console.log(result);\n      </script>\n<script>\n         // Get the container element\n         const container14 = document.getElementById('math-engine-container14');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit', event => {\n           // Prevent the default form submission behavior\n           event.preventDefault();\n         \n           // Get the value of the input field\n           const expression = document.getElementById('math-input').value;\n         \n           // Use the JavaScript eval() function to calculate the result of the expression\n           const result = eval(expression);\n         \n           // Create a paragraph element to display the result\n           const p = document.createElement('p');\n           p.innerHTML = `Result: ${result}`;\n         \n           // Add the paragraph to the container\n           container.appendChild(p);\n         });\n         \n         // Create a function to generate random numbers\n         const generateRandomNumber = () => {\n           return Math.floor(Math.random() * 100);\n         }\n         \n         // Create a function to log the random numbers to the console\n         const logRandomNumbers = () => {\n           console.log(generateRandomNumber());\n           console.log(generateRandomNumber());\n           console.log(generateRandomNumber());\n         }\n         \n         // Call the logRandomNumbers function\n         logRandomNumbers();\n      </script>\n<script>\n         // Get the container element\n         const container15 = document.getElementById('math-engine-container15');\n         \n         // Create a form to submit math expressions\n         const form = document.createElement('form');\n         form.id = 'math-form';\n         form.action = '#';\n         \n         // Create an input field for entering math expressions\n         const input = document.createElement('input');\n         input.type = 'text';\n         input.id = 'math-input';\n         input.name = 'expression';\n         input.placeholder = 'Enter a math expression';\n         \n         // Add the input field to the form\n         form.appendChild(input);\n         \n         // Create a button for submitting the form\n         const button = document.createElement('button');\n         button.type = 'submit';\n         button.innerHTML = 'Calculate';\n         \n         // Add the button to the form\n         form.appendChild(button);\n         \n         // Add the form to the container\n         container.appendChild(form);\n         \n         // Add an event listener to the form that listens for the submit event\n         form.addEventListener('submit',